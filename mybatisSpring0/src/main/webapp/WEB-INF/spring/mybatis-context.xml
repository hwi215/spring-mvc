<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:p="http://www.springframework.org/schema/p"
             xmlns:tx="http://www.springframework.org/schema/tx"
             xmlns:aop="http://www.springframework.org/schema/aop"
             xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">


<context:component-scan base-package="com.example.mybatisspring0.dto, com.example.mybatisspring0.dao"/>

    <context:property-placeholder location="classpath:*.properties"/>
<beans:bean	id="dataSource"
               class="org.apache.commons.dbcp.BasicDataSource"
               p:driverClassName="${jdbc.oracle.driver}"
               p:url="${jdbc.oracle.url}"
               p:username="${jdbc.oracle.username}"
               p:password="${jdbc.oracle.password}"
               p:maxActive="10"/>


<beans:bean id="sqlSessionFactory"
            class="org.mybatis.spring.SqlSessionFactoryBean">
    <beans:property name="dataSource" ref="dataSource" />
    <beans:property name="mapperLocations" value="classpath:mapper/*Mapper.xml" /><!--  Mapper.xml 로끝나는 mapper모두 등록 -->
    <beans:property name="typeAliasesPackage" value="com.example.mybatisspring0.dto" /><!-- dto폴더안에있는 클래스들 별칭 자동만듦 - 클래스명의 첫글만 소문자!! -->
    <!-- <beans:property name="configLocation" value="classpath:config/SqlMapConfig.xml"/> -->
</beans:bean>


    <!-- SqlSession의 구현체로 SqlSessionFactory로 부터 필요할때마다 SqlSession을 만들어준다 -->
<beans:bean id="sqlSession"
            class="org.mybatis.spring.SqlSessionTemplate">
    <beans:constructor-arg index="0" ref="sqlSessionFactory"/>
</beans:bean>



<!-- Spring Transacion 설정 -->
    <!--
<beans:bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager" id="transactionManager">
    <beans:property name="dataSource" ref="dataSource"/>
</beans:bean>-->

<!-- transaction 옵션 설정 -->
<!--
<tx:advice transaction-manager="transactionManager" id="txAdivce">
  <tx:attributes>
    <tx:method name="*" propagation="REQUIRED" isolation="DEFAULT"
       rollback-for="kosta.mvc.exception.MyException"/>
  </tx:attributes>
</tx:advice>

<aop:config>
  <aop:advisor advice-ref="txAdivce" pointcut="execution(public * kosta.mvc.service.*Impl.*(..))"/>
</aop:config>
-->

<!-- 위의 transaction옵션과 aop설정을 @annotation으로...
<tx:annotation-driven transaction-manager="transactionManager"/>
-->
</beans:beans>

