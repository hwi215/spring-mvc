<?xml version="1.0" encoding="UTF-8" ?>
    <!DOCTYPE mapper
            PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
            "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
    <mapper namespace="EmpMapper">

    <!-- 자주 사용되는 쿼리를 참주하여 구하기 -->
    <sql id = "empSel">
        select * from emp

    </sql>

    <!-- 사원이름 정보 검색 -->
    <select id = "selectName" resultType="String">
        select ename from emp
    </select>

    <!-- 사원 등록하기 -->
    <insert id = "insert" parameterType="empDto">
        insert into emp(empno, ename, job, sal, hiredate)
        values(#{empno}, #{empName}, #{job}, #{sal}, sysdate)

    </insert>

    <!-- 사원 삭제하기(사원번호로 삭제))-->
    <delete id="delete" parameterType="int">
        delete from emp where empno = #{_parameter}
    </delete>

    <!-- 전체 검색 -->
    <select id = "selectAll" resultType="empDto">
        select empno, ename as empname, job, sal, hiredate
        from emp
    </select>

    <!-- 사원 검색 -->

    <sql id = "where">
        where empno = #{_parameter}
    </sql>
    <select id = "selectByEmpNo" resultType="empDto" parameterType="int">
        select empno, ename as empname, job, sal, hiredate
        from emp <include refid="where"></include>
    </select>



    <!-- 전달된 급여보다 적게 받는 사원정보 검색 -->
    <select id="selectLessThanSal" parameterType="int" resultType="empDto">
        <include refid="empSel"/>
            where sal &lt; #{_parameter}
            order by sal
    </select>


    <!-- 급여기 min ~ max -->
    <select id="selectMinMax" parameterType="map" resultType="empDto">
        <include refid="empSel"/>
            where sal between #{min} and #{max}
    </select>

    <!-- 인수로 전달된 컬럼을 기준으로 정렬하기
        #{}: PreparedStatement 방식 -> 정렬안됨 - 조건(if or choose 등)을 활용하여 직접 쿼리 짜야 함
        ${}: Statement 방식 -> SQL Injection 공격대상 -> 정렬잘됨 - 권장X
    -->
    <select id="selectByOrder" parameterType="string" resultType="empDto">
        <include refid="empSel"/>
        order by ${_parameter}

    </select>


</mapper>